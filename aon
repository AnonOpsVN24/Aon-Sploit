#bin/bash
white="\033[1;37m"
grey="\033[0;90m"
purple="\033[0;35m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
purple="\033[0;35m"
cyan="\033[0;36m"
cafe="\033[0;33m"
#logo
        function bin() {
        read -p "$(echo -e $green root)$(echo -e $red@bin$purple:~#)" bin
        if [ $bin = ? ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ?            Cứu Trợ ( Trợ Giúp )                        ║
        ║ /options     hiện bảng dò soát tấn công                  ║
        ║ /exploit     tiến hành kiểm tra                          ║
        ║ /bin         thiết lập Mã BIN , ID thẻ Ngân Hàng         ║
        ║ /back        thoát bảng điều khiển                       ║
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ)⁠_⁠/⁠¯"
        bin
        elif [ $bin = /bin ]; then
        read -p "$(echo -e $green root)$(echo -e $red@bin_id$purple:~#)" id
        echo -e "$white[+]$green thiết lập thành công $id"
        bin
        elif [ $bin = /exploit ]; then
        echo -e "$green"
        curl -H "Accept-Version: 3" "https://lookup.binlist.net/$id"
        bin
        elif [ $bin = /options ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ID CARD : $id
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ)⁠_⁠/⁠¯"
        bin
        elif [ $bin = /back ]; then
        types
        else
        echo -e "$red $bin Command Not Found"
        bin
        fi
}
function enum() {
        read -p "$(echo -e $green root)$(echo -e $red@enum$purple:~#)" comd
        if [ $comd = ? ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ?            Cứu Trợ ( Trợ Giúp )                        ║
        ║ /email       Thiết lập địa chỉ email                     ║
        ║ /phone       Thiết lập đỉa chỉ số điện thoại             ║
        ║ /options     hiện bảng dò soát tấn công                  ║
        ║ /exploit     tiến hành kiểm tra                          ║
        ║ /back        thoát bảng điều khiển                       ║
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ)⁠_⁠/⁠¯"
        enum
        elif [ $comd = /email ]; then
        read -p "$(echo -e $green root)$(echo -e $red@enum_email$purple:~#)" email
        echo -e "$white[+]$green thiết lập thành công $email"
        enum
        elif [ $comd = /phone ]; then
        read -p "$(echo -e $green root)$(echo -e $red@enum_phone$purple:~#)" number
        read -p "$(echo -e $green root)$(echo -e $red@enum_code$purple:~#)" co
        echo -e "$white[+]$green thiết lập thành công $phone"
        enum
        elif [ $comd = /options ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ email : $email = /exploit_email
        ║ phone : $number = /exploit_phone
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ)⁠_⁠/⁠¯"
enum
elif [ $comd = /exploit_phone ]; then
api_key=806e8db910e4a9e8f22415e0506debd0
echo -e "$green"
curl "http://apilayer.net/api/validate?access_key=$api_key&number=$number&country_code=$co&format=1"
enum
elif [ $comd = /exploit_email ]; then
api_key=bff73852e85b728070baaa0136b15916
echo -e "$green"
curl "http://apilayer.net/api/check?access_key=$api_key&email=$email&smtp=1&format=1"
enum
elif [ $comd = /back ]; then
types
else
echo -e "$red $enum Command Not Found"
enum
fi
}
function rat1() {
                        read -p "$(echo -e $green root)$(echo -e $red@remote_access_trojan$purple:~#$nc)" type_rat1
                        if [ $type_rat1 = ? ]; then
                        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ?            Cứu Trợ ( Trợ Giúp )                        ║
        ║ /exploit     quét thiết bị webserver                     ║
        ║ /rhost       địa chỉ ip của máy victim                   ║
        ║ /rport       cổng vào của ip victim                      ║
        ║ /file        tạo tên file giả để tạo thiết bị truy cập   ║
        ║ /options     hiện bảng dò soát tấn công                  ║
        ║ /back        thoát bảng điều khiển                       ║
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯"
                        rat1
                        elif [ $type_rat1 = /rhost ]; then
                        read -p "$(echo -e $green root)$(echo -e $red@rhost$puprle:~#)" rhost
                        echo -e "$white[+]$green thiết lập thành công rhost=$rhost"
                        rat1
                        elif [ $type_rat1 = /rport ]; then
                        read -p "$(echo -e $green root)$(echo -e $red@rport$puprle:~#)" rport
                        echo -e "$white[+]$green thiết lập thành công rport=$rport"
                        rat1
                        elif [ $type_rat1 = /file ]; then
                        read -p "$(echo -e $green root)$(echo -e $red@file$purple:~#)" file
                        echo -e "$white[+]$green thiết lập thành công file=$file"
                        rat1
                        elif [ $type_rat1 = /options ]; then
                        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ mục tiêu tấn công : $rhost
        ║ cổng mục tiêu tấn công : $rport
        ║ tên file : $file
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯"
                        rat1
                        elif [ $type_rat1 = /exploit ]; then
        echo -e " $green[+]$red bắt đầu tiến hành gửi dữ liệu tới máy chủ --> $rhost:$rport với file là $file"
        sleep 10
        echo -e " $green[+]$red Hmm , có vẻ như , nạn nhân đã tải xuống thành công $file"
        sleep 3
        echo -e " $green[+]$red đang kiểm tra session 1"
        sleep 3
        echo -e " $green[+]$red Session 1 đang hoạt động "
    function cmd() {
        read -p "$(echo -e $green root)$(echo -e $red@set$rhost:$rport$purple:~#$nc)" cmnd
        echo -e "$green"
        if [ $cmnd = $cmnd  ]; then
        $cmnd
        cmd
        else
        echo "$cmnd Command Not Found"
        cmd
        fi
 }
        cmd
                        elif [ $type_rat1 = /back ]; then
                        bash aon.sh
                        else
                        echo -e "$red $type_rat1 Command Not Found"
                        rat1
                        fi
}

        function types3() {
        read -p "$(echo -e $green root)$(echo -e $red@scan$url$purple:~#$nc)" scan2
        if [ $scan2 = ? ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ?            Cứu Trợ ( Trợ Giúp )                        ║
        ║ /exploit     quét thiết bị webserver                     ║
        ║ /urls        Thiếp Lập Mục Tiêu                          ║
        ║ /sql_scan    kiểm tra liên kết có khả năng bị sqli       ║
        ║ /vulner_scan kiểm tra bảng port bị vulerable             ║
        ║ /safe_scan   kiểm tra bảng vulnerable tất cả các cổng vào║
        ║ /xss_scan    kiểm tra liên kết bị dính XSS               ║
        ║                                                          ║
        ║ cve2014-2129 Phát hiện xem thiết bị Cisco ASA có dễ bị   ║
        ║               công bởi Lỗ hổng từ chối dịch vụ Cisco     ║
        ║ cve2017-8917 Tập lệnh cố gắng đưa vào một câu lệnh       ║
        ║              SQL chạy user()                             ║
        ║ /ftpd_scan   Kiểm tra tràn bộ đệm dựa trên ngăn xếp      ║
        ║               trong máy chủ ProFTPD                      ║
        ║ /ssl_scan                                                ║
        ║                                                          ║
        ║ /http_scan  Nỗ lực khai thác lỗ hổng shellshock          ║
        ║             (CVE-2014-6271 và CVE-2014-7169)             ║
        ║             trong ứng dụng web                           ║
        ║                                                          ║
        ║ /rdp_scan   Kiểm tra xem máy có dễ bị tấn công bởi       ║
        ║             lỗ hổng MS12-020 RDP hay không.              ║
        ║                                                          ║
        ║ /firewall   Kiểm Tra xem webserver có cài firewall không ║
        ║                                                          ║
        ║ /ipofficial Nỗ lực liệt kê người dùng trong hệ thống     ║
        ║             Avaya IP Office 7.x.                         ║
        ║                                                          ║
        ║ /options     hiện bảng dò soát tấn công                  ║
        ║                                                          ║
        ║ /back        thoát module                                ║
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯"
        types3
        elif [ $scan2 = /urls ]; then
        read -p "$(echo -e $green root)$(echo -e $red@scan$purple:~#$nc)" url
        echo -e "$white[+]$green thiết lập mục tiêu thành công $url"
        types3
        elif [ $scan2 = /options ]; then
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ Mục Tiêu Tấn Công : $url
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯"
        types3
        elif [ $scan2 = /safe_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /sql_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=http-sql-injection $url
        types3
        elif [ $scan2 = /vulner_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=vulners $url
        types3
        elif [ $scan2 = /xss_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=http-stored-xss,http-dombased-xss,http-cookie-flags $url
        types3
        elif [ $scan2 = cve2017-8917 ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=http-vuln-cve2017-8917 $url
        types3
        elif [ $scan2 = cve2014-2129 ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=http-vuln-cve2014-2129 $url
        types3
        elif [ $scan2 = /ftpd_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /ssl_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /http_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /rdp_scan ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /firewall ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /ipofficial ]; then
        echo -e "$green"
        sleep 3
        nmap -sV --script=safe $url
        types3
        elif [ $scan2 = /back ]; then
        types
        else
        echo -e "$red $scan2 Command not found"
        types3
        fi
        }
trap ctrl_c 2
function ctrl_c () {
echo $(clear)
azar=$(shuf -i 1-2 -n bash 1)
bash $AnonOpsVN24/BOT/"$azar"
}
function banner() {
ctrl_c
echo -e "$red╔═════════════════════════════════════════════════════════════════╗"
sleep 0.30
echo -e "$green---[:::] AONSPLOIT IS A TOOLS SCANING AND TESTING SECURITY[:::]---"
sleep 0.30
echo "---[:::] This is a practical tool                         [:::]---"
sleep 0.30
echo "---[:::] CREATED BY : PHAMCHIEN ADDAMS                    [:::]---"
sleep 0.30
echo "---[:::] VERSION : 1.0.8                                  [:::]---"
sleep 0.30
echo "---[:::] Twitter : @Anonymous_VNPC                        [:::]---"
sleep 0.30
echo "---[:::] website : https://anonopsnew.blogspot.com        [:::]---"
sleep 0.30
echo -e "$red╚═════════════════════════════════════════════════════════════════╝"
echo -e "
$cyan       =[$yellow aonsploit v1.0.8                         $cyan ]
$cyan+ -- --=[$yellow We Are Anonymous                         $cyan ]
$cyan+ -- --=[$yellow We Are Legion                            $cyan ]
$cyan+ -- --=[$yellow Expect Us                                $cyan ]

$green aonsploit tip: You can pivot connections over sessions
started with the rat modules
Metasploit Documentation: https://anonopsnew.blogspot.com"
echo ""
sleep 3
}

        function help() {
        echo -e "$green
        ╔══════════════════════════════════════════════════════════╗
        ║ ?        cứu trợ ( trợ giúp )                            ║
        ║ banner   icon trụ sở chính của công cụ                   ║
        ║ bank     Thiết lập tài khoản bank giả mạo                ║
        ║ dns      kiểm tra hệ thống DNS của server                ║
        ║ exit     Exit the console                                ║
        ║ rat      tạo tệp dữ liệu xâm nhập trái phép vào máy chủ  ║
        ║ enum     kiểm tra địa chỉ email và số điện thoại         ║
        ║ bin      kiểm tra địa chỉ của Mã BIN hoặc ID bank $      ║
        ║ scan     kiểm tra lỗ hổng bảo mật của webserver          ║
        ╚══════════════════════════════════════════════════════════╝
                                ¯⁠\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯"
}
banner
#TYFE
        function types() {
        read -p "$(echo -e $green root)$(echo -e $red@aonsploit$purple:~#$nc)" type
        if [ $type = ? ]; then
        help
        types
        elif [ $type = banner ]; then
        bash aon
        elif [ $type = bank ]; then
        #Menu_Bank
        function bank() {
        echo  -e "
$red  ┌────────────────┐$cyan  ╭───────────────────────╮
$red  │$green  ╭┼┼╮$red          │$cyan  │ $purple▶︎ 1 • Create Account  │
$red  │$green  ╰┼┼╮$red          │$cyan  ├───────────────────────┴─────╮
$red  │$green  ╰┼┼╯$red          │$cyan  │ $purple▶︎ 2 •  steal credit cards   │
$red  │                │$cyan  ├────────────────────────────┬╯
$red  │  A O N B U G   │$cyan  │$purple ▶︎ 3 • Update Account Info  │
$red  │  B A N K       │$cyan  ├───────────────────────┬────╯
$red  │                │$cyan  │$purple ▶︎ 4 • Delete Account  │
$red  │$purple  C H I E N$aed     │$cyan  ├───────────────────────┴────╮
$red  │                │$cyan  │$purple ▶︎ 5 • Search Account Info  │
$red  │                │$cyan  ├────────────────────────────┴╮
$red  │$green ║│┃┃║║│┃║│║┃│$red  │$cyan  │$purple ▶︎ 6 • View Customer's List  │
$red  │$green ║│┃┃║║│┃║│║┃│$red  │$cyan  ├────────────────────┬────────╯
$red  │                │$cyan  │$purple ▶︎ 7 • Exit System  │
$red  └────────────────┘$cyan  ╰────────────────────╯"
}
        function choose() {
        read -p "$(printf [+]) $(printf Choose ) $(printf Payload ) $(printf :)" payload
        if [ $payload = 1 ]; then
        read -p "$(echo -e $white[+]$green Enter Last Name : $nc)" ln
        read -p "$(echo -e $white[+]$green Enter Fist Name :: $nc)" fn
        read -p "$(echo -e $white[+]$green Enter Address : $nc)" ad
        read -p "$(echo -e $white[+]$green Enter BrithDay : $nc)" br
        read -p "$(echo -e $white[+]$green Enter Phone Number : $nc)" phone
        read -p "$(echo -e $white[+]$green Enter Email Address : $nc)" email
        read -p "$(echo -e $white[+]$green Enter Country Code Ex VN: $nc)" cd
        read -p "$(echo -e $white[+]$green Enter ID CARD Trash : $nc)" id
        read -p "$(echo -e $white[+]$green Enter Password : $nc)" pwd
        sleep 3
        echo -e "$white[✓]$green Created Done "
        echo -e "$white[+]$green Created Database Done "
        sleep 3
        echo -e "
        $cyan[+]$green {last_name}={$ln}
        $cyan[+]$green {fist_name}={$fn)
        $cyan[+]$green {Address}={$ad}
        $cyan[+]$green {Birth_Day={$br}
        $cyan[+]$green {Phone_Number}={$phone}
        $cyan[+]$green {Email}={$email}
        $cyan[+]$green {Country_Code}={$co}
        $cyan[+]$green {ID_Cards={$id}
        $cyan[+]$green {Password}={$pwd}"
        types
                elif [ $payload = 2 ]; then
                echo "
                1. Common form of fraud - spreading Virus
                When right-clicking the program/code/link is designed to self-replicate and copy to many other electronic devices of many people. Virus-infected electronic devices will have all the information in them stolen, leaving the back door open for hackers to gain control and gain access to the object spreading the virus.
                2. Impersonating the investigating police
                Regarding the case of money laundering / drug trafficking / banned substances..., call to request a transfer to the account provided so as not to be impeached as accomplices and promise to return the money after it is over.
                3. Impersonating a Telecom Officer
                Call to inform you that you owe a very large amount of telecommunications charges, along with threats and requests to pay money to the account provided by the subject to keep.
                4. Impersonating a Local Government Authority
                Request to provide personal information to use that information to issue cards, use cards for profiteering purposes without the knowledge of the involved parties.
                5. Occupy Social Network accounts (Facebook, Twitter, Zalo...)
                For profiteering: top up phone cards, buy scratch cards, game cards... or steal personal information, card information, e-banking...
                6. Fake Website/App (App)/Social Network
                Have an interface similar to the official Website/App/Social Network via email/message warning "account has been locked" and ask to click on the link to redirect to the fake Website/App/Social Network and then request login request, provide personal information, card information...
                7. Email/Message with links containing malware
                To steal personal information, card information, e-banking...
                8. International Financial Scam - Prepaid Fee Scam
                It is a form of misappropriation of money. Usually starts with an email that appears to be sent directly to the recipient, but when clicked, it will immediately spread to many other people. The email content suggests that the recipient will have a large amount of money but actually do not receive it"
                bash bug.sh
                elif [ $payload = 3 ]; then
                read -p "$(echo -e $white[+]$green Enter Last Name : $nc)" ln
        read -p "$(echo -e $white[+]$green Enter Fist Name :: $nc)" fn
        read -p "$(echo -e $white[+]$green Enter Address : $nc)" ad
        read -p "$(echo -e $white[+]$green Enter BrithDay : $nc)" br
        read -p "$(echo -e $white[+]$green Enter Phone Number : $nc)" phone
        read -p "$(echo -e $white[+]$green Enter Email Address : $nc)" email
        read -p "$(echo -e $white[+]$green Enter Country Code Ex VN: $nc)" cd
        read -p "$(echo -e $white[+]$green Enter ID CARD Trash : $nc)" id
        read -p "$(echo -e $white[+]$green Enter Password : $nc)" pwd
        sleep 3
        echo -e "$white[✓]$green Created Done "
        echo -e "$white[+]$green Created Database Done "
        sleep 3
        echo -e "
        $cyan[+]$green {last_name}={$ln}
        $cyan[+]$green {fist_name}={$fn)
        $cyan[+]$green {Address}={$ad}
        $cyan[+]$green {Birth_Day={$br}
        $cyan[+]$green {Phone_Number}={$phone}
        $cyan[+]$green {Email}={$email}
        $cyan[+]$green {Country_Code}={$co}
        $cyan[+]$green {ID_Cards={$id}
        $cyan[+]$green {Password}={$pwd}"
        types
                elif [ $payload = 4 ]; then
                read -p "$(echo -e $white[+]$green Enter UserName : $nc)" usr
                read -p "$(echo -e $white[+]$green Enter Password : $nc)" pwd
                echo "[+] Are You Sure Deleted Account $usr ?" read -p "$(echo Y/n :)" cmd
                        if [ $cmd = Y ]; then
                        echo "[✓] Deleted Success "
                        elif [ $cmd = y ]; then
                        echo "[✓] Deleted Success "
                        elif [ $cmd = N ]; then
                        echo " Okay"
                        elif [ $cmd = n ]; then
                        echo  " Okay"
                        else
                        echo "$cmd Command Not Found "
                        exit 1
                        fi
                elif [ $payload = 5 ]; then
                read -p "$(echo -e $red[$green+$red]$nc) $(echo -e $white Enter Num BIN :$nc) " bin
                echo -e "$green"
                curl -H "Accept-Version: 3" "https://lookup.binlist.net/$bin"
                elif [ $payload = 6 ]; then
                echo "Update"
                elif [ $payload = 7 ]; then
                exit 1
                else
                echo "$payload Command Not Found "
fi
}
bank
choose
        elif [ $type = dns ]; then
        echo " Enter Target👇"
        read -p "$(echo -e $green root)$(echo -e $red@dns_scan$purple:~#$nc)" scan2
        nslookup $target
        types
        elif [ $type = rat ]; then
        rat1
        elif [ $type = scan ]; then
        types3
        elif [ $type = enum ]; then
        enum
        types
        elif [ $type = bin ]; then
        bin
        else
        echo -e "$red $type Command Not Found"
        types
fi
}
types
